// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition"

// DATE "10/22/2024 14:49:57"

// 
// Device: Altera 10M08DAF256A7G Package FBGA256
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Bai22_10 (
	F,
	A,
	B,
	C,
	D);
output 	F;
input 	A;
input 	B;
input 	C;
input 	D;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \F~output_o ;
wire \D~input_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \C~input_o ;
wire \inst~0_combout ;


fiftyfivenm_io_obuf \F~output (
	.i(\inst~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\F~output_o ),
	.obar());
// synopsys translate_off
defparam \F~output .bus_hold = "false";
defparam \F~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_ibuf \D~input (
	.i(D),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\D~input_o ));
// synopsys translate_off
defparam \D~input .bus_hold = "false";
defparam \D~input .listen_to_nsleep_signal = "false";
defparam \D~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .listen_to_nsleep_signal = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .listen_to_nsleep_signal = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .listen_to_nsleep_signal = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_lcell_comb \inst~0 (
// Equation(s):
// \inst~0_combout  = (\D~input_o ) # (((!\C~input_o ) # (!\B~input_o )) # (!\A~input_o ))

	.dataa(\D~input_o ),
	.datab(\A~input_o ),
	.datac(\B~input_o ),
	.datad(\C~input_o ),
	.cin(gnd),
	.combout(\inst~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst~0 .lut_mask = 16'hBFFF;
defparam \inst~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign F = \F~output_o ;

endmodule
